// Noise Field
// Particle trails via Perlin noise. 


float numParticles;
float fadeAmount;
float maxLen = 100;
float strokeAmount;

int iWait = 0;//just for now

Particle[] particles = new Particle[numParticles];
int FIELDWIDTH = screen.width;
int FIELDHEIGHT = screen.height;

void setup() {
	size(FIELDWIDTH, FIELDHEIGHT);
	colorMode(HSB, 100);
	background(0);  
	randomize();
}

void randomize(){

	numParticles = 100;//random(50,500);
//	fadeAmount = random(.5,20);
        fadeAmount = .2;
//	maxLen = random(30,200);
	maxLen = 200;
//	strokeAmount = random(0.02,0.3);
	strokeAmount = .23;

	for(int i=0; i<numParticles; i++){
		particles[i]=new Particle(i/5000.0);
	}
}

void mouseClicked() {
//	randomize();
}

void draw() {
	iWait++;
	if (iWait==20){//wait for 15th time around
		noStroke();	
		fill(0,fadeAmount);
//	rect(0,0,width,height);//fade background
		rect(0, 0, FIELDWIDTH, FIELDHEIGHT)
		translate((width- FIELDWIDTH)/2,(height- FIELDHEIGHT)/2);

	
  		for(int i=0; i<numParticles; i++){
			particles[i].update();//render particles
		}
		iWait = 0; 
	}
//	setTimeout(function(){}, 2000);

}

class Particle {
  float id,x,y,xp,yp,s,d,sColor,len,z,zp;
 
  Particle(float _id) {
    id=_id;
    init();
  }

	void init(){
		x=xp=random(0,FIELDWIDTH);
		y=yp=random(0,FIELDHEIGHT);
		z=zp=0;
//		s=random(2,7);
                s=5;
		sColor = random(0, 50);//map(x,0,FIELDWIDTH,0,100);
    	len = random(1,maxLen-1);
	}
 
	void update(){
 
		id+=0.01;
		

		if (mouseY == 0|| mouseX == 0){
			mouseY = 1;
			mouseX = 1;			
		}
		mouseX = 1000;
		mouseY = 1000;
		d=(noise(id,x/mouseY,y/mouseY)-0.5)*mouseX;  

		x+=cos(radians(d))*s;
		y+=sin(radians(d))*s;
		
	
		strokeWeight((maxLen - len)*strokeAmount);
		stroke(sColor, 80, 200);
		//stroke(sColor,80,90);
		
		line(xp,yp,x,y);
		xp=x;
		yp=y;
		len++;
		if (len >= maxLen) init();
	}
 
}

